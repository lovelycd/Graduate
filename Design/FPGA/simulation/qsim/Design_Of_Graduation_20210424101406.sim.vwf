/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2018  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("A0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("A1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("A2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("A3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("A4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("A5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("En")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("A0")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.845;
			LEVEL 0 FOR 342.993;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 39.864;
			LEVEL 1 FOR 40.136;
			LEVEL 0 FOR 2252.026;
		}
	}
}

TRANSITION_LIST("A1")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.822;
			LEVEL 0 FOR 463.005;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 79.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 159.876;
			LEVEL 1 FOR 80.124;
			LEVEL 0 FOR 2252.049;
		}
	}
}

TRANSITION_LIST("A2")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.629;
			LEVEL 0 FOR 543.042;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 160.087;
			LEVEL 0 FOR 239.913;
			LEVEL 1 FOR 22.403;
			LEVEL 0 FOR 2229.926;
		}
	}
}

TRANSITION_LIST("A3")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 4.791;
			LEVEL 0 FOR 324.676;
			LEVEL 1 FOR 58.453;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 319.881;
			LEVEL 1 FOR 80.119;
			LEVEL 0 FOR 2412.08;
		}
	}
}

TRANSITION_LIST("A4")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.237;
			LEVEL 0 FOR 9994.763;
		}
	}
}

TRANSITION_LIST("A5")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL X FOR 5.425;
			LEVEL 0 FOR 9994.575;
		}
	}
}

TRANSITION_LIST("CLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("En")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 7440.0;
			LEVEL 0 FOR 2240.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "A0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "A5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "En";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 290000;
	MASTER = TRUE;
}
;
